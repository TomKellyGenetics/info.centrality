% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/info.centrality.vertex.R
\name{Information Centrality Functions}
\alias{Information Centrality Functions}
\alias{info.centrality.network}
\alias{info.centrality.vertex}
\alias{network.efficiency}
\title{Extensions to iGraph for Information Centrality}
\usage{
network.efficiency(graph)

info.centrality.vertex(graph, net = NULL, verbose = F)

info.centrality.network(graph, net = network.efficiency(graph), verbose = F)
}
\arguments{
\item{graph}{An \code{\link[igraph]{igraph}} object. May be directed or weighted as long as a shortest path can be computed.}

\item{net}{Numeric. Efficiency of the Network without an nodes removed. Defaults to computing for Graph given as input, can be given as a numeric if computed in advance to save run time.}

\item{verbose}{Logical. Whether computing information centrality of each node prints to monitor progress of a potentially long run-time. Defaults to FALSE.}
}
\description{
Functions to compute the information centrality of a vertex (node) and network respectively. Includes a network efficiency measure to compute as a metric for information centrality. Uses graphs functions as an extension of \code{\link[igraph]{igraph}}.
}
\examples{

#generate example graphs
library("igraph")
g1 <- make_ring(10)
g2 <- make_star(10)

#show network paths
distances(g1)
shortest_paths(g1, 5)

#compute efficiency of full graphs
network.efficiency(g1)
network.efficiency(g2)

#compute information centrality (relative efficency when removed) for each node
info.centrality.vertex(g1)
info.centrality.vertex(g2)

#compute total information centrality for a network
info.centrality.network(g1)
info.centrality.network(g2)
}
\keyword{centrality}
\keyword{graph}
\keyword{igraph}
\keyword{network}

